[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aws-multi-account-inventory"
version = "2.0.0"
description = "Enhanced AWS Multi-Account Inventory System with Cost Optimization"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["aws", "inventory", "cost-optimization", "multi-account", "cloud"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[project.urls]
Homepage = "https://github.com/yourusername/aws-multi-account-inventory"
Documentation = "https://github.com/yourusername/aws-multi-account-inventory/wiki"
Repository = "https://github.com/yourusername/aws-multi-account-inventory.git"
Issues = "https://github.com/yourusername/aws-multi-account-inventory/issues"

[tool.setuptools]
packages = ["src", "src.collector", "src.query"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.toml"]

[tool.ruff]
line-length = 120
target-version = "py311"
extend-include = ["*.ipynb"]
extend-exclude = [
    "lambda-build/",
    "terraform/",
    ".terraform/",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "ARG001"]
"scripts/*" = ["T20"]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv", "build"]
skips = ["B404", "B603"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=src",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.vulture]
min_confidence = 80
paths = ["src", "tests"]
exclude = ["venv", ".venv", "build", "dist"]